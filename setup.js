#!/usr/bin/env node

/**
 * 💝 Love Story App Setup Script
 * 
 * This script helps couples quickly configure their love story app
 * Run with: node setup.js
 */

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

function ask(question) {
  return new Promise((resolve) => {
    rl.question(question, resolve);
  });
}

async function main() {
  console.log('💝 Welcome to Love Story App Setup!\n');
  console.log('Let\'s configure your romantic app...\n');

  // Get couple information
  const partner1Name = await ask('👤 Enter your name: ');
  const partner1Email = await ask('📧 Enter your email: ');
  
  const partner2Name = await ask('💕 Enter your partner\'s name: ');
  const partner2Email = await ask('💌 Enter your partner\'s email: ');
  
  const startDate = await ask('📅 Enter your relationship start date (YYYY-MM-DD): ');
  const countdownDays = await ask('⏰ How many days to count to? (default: 50): ') || '50';
  const appTitle = await ask('💖 App title (default: "Our Love Story"): ') || 'Our Love Story';

  // Get Supabase credentials
  console.log('\n🔑 Now let\'s set up your Supabase connection...');
  console.log('(Get these from your Supabase dashboard → Settings → API)');
  
  const supabaseUrl = await ask('🌐 Supabase Project URL: ');
  const supabaseKey = await ask('🔐 Supabase Anon Key: ');

  rl.close();

  // Update couple configuration
  const coupleConfig = `// 💝 Configure your love story details here
// This file was generated by the setup script

export const COUPLE_CONFIG = {
  // Your relationship details
  partner1: {
    name: "${partner1Name}",
    email: "${partner1Email}"
  },
  partner2: {
    name: "${partner2Name}",
    email: "${partner2Email}"
  },
  
  // Important dates
  relationshipStart: "${startDate}",
  
  // Countdown settings
  reunionCountdownDays: ${countdownDays},
  
  // App customization
  appTitle: "${appTitle}",
  tagline: "Every moment together is a treasure",
  
  // Theme colors (optional - defaults to romantic theme)
  primaryColor: "hsl(340, 82%, 52%)", // Rose/pink
  accentColor: "hsl(350, 89%, 60%)",  // Bright pink
  
  // Allowed email domains for registration (leave empty to allow any)
  allowedEmailDomains: [], // e.g., ["gmail.com", "outlook.com"]
};

// Export individual values for easy access
export const { partner1, partner2, relationshipStart, reunionCountdownDays, appTitle } = COUPLE_CONFIG;`;

  // Update Supabase client
  const clientPath = path.join('src', 'integrations', 'supabase', 'client.ts');
  if (fs.existsSync(clientPath)) {
    let clientContent = fs.readFileSync(clientPath, 'utf8');
    
    // Replace the URL and key
    clientContent = clientContent.replace(
      /const SUPABASE_URL = ".*";/,
      `const SUPABASE_URL = "${supabaseUrl}";`
    );
    clientContent = clientContent.replace(
      /const SUPABASE_PUBLISHABLE_KEY = ".*";/,
      `const SUPABASE_PUBLISHABLE_KEY = "${supabaseKey}";`
    );
    
    fs.writeFileSync(clientPath, clientContent);
    console.log('✅ Updated Supabase client configuration');
  }

  // Write the couple configuration
  const configPath = path.join('src', 'config', 'couple.ts');
  fs.mkdirSync(path.dirname(configPath), { recursive: true });
  fs.writeFileSync(configPath, coupleConfig);

  console.log('\n🎉 Setup complete!');
  console.log('\nNext steps:');
  console.log('1. Run: npm install');
  console.log('2. Run: npm run dev');
  console.log('3. Open http://localhost:5173');
  console.log('4. Both partners sign up with the emails you provided');
  console.log('5. Start sharing your love story! 💕');
  console.log('\n💝 Happy loving!');
}

main().catch(console.error);